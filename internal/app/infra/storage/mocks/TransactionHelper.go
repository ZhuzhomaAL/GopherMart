// Code generated by mockery v2.33.1. DO NOT EDIT.

package mocks

import (
	context "context"

	storage "github.com/ZhuzhomaAL/GopherMart/internal/app/infra/storage"
	mock "github.com/stretchr/testify/mock"
)

// TransactionHelper is an autogenerated mock type for the TransactionHelper type
type TransactionHelper struct {
	mock.Mock
}

// StartTransaction provides a mock function with given fields: ctx
func (_m *TransactionHelper) StartTransaction(ctx context.Context) (storage.Transaction, error) {
	ret := _m.Called(ctx)

	var r0 storage.Transaction
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (storage.Transaction, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) storage.Transaction); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(storage.Transaction)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTransactionHelper creates a new instance of TransactionHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionHelper {
	mock := &TransactionHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
